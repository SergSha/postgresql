---
# tasks file for postgresql

- name: master | Initialization postgresql database
  command: postgresql-14-setup initdb
  ignore_errors: yes

#listen_addresses = 'localhost'         # what IP address(es) to listen on;
- name: master | Edit postgresql.conf
  lineinfile:
    path: "{{ pg_data }}/postgresql.conf"
    regexp: "^(.*)#listen_addresses = 'localhost'(.*)$"
    line: "listen_addresses = '*'"
    backrefs: yes

#host    all             all             127.0.0.1/32            scram-sha-256
- name: master | Edit pg_hba.conf 1
  lineinfile:
    path: "{{ pg_data }}/pg_hba.conf"
    regexp: "^(.*)host    all             all             127.0.0.1/32            scram-sha-256(.*)$"
    line: "host    all             all             0.0.0.0/00            scram-sha-256"
    backrefs: yes

#host    replication     all             127.0.0.1/32            scram-sha-256
- name: master | Edit pg_hba.conf 2
  lineinfile:
    path: "{{ pg_data }}/pg_hba.conf"
    regexp: "^(.*)host    replication     all             127.0.0.1/32            scram-sha-256(.*)$"
    line: "host    replication     all             0.0.0.0/00            scram-sha-256"
    backrefs: yes

- name: master | Start postgresql service
  service:
    name: postgresql-14
    state: restarted
    enabled: yes

- name: master | Change password for user postgres
  command: psql -c "ALTER ROLE {{ pg_user }} PASSWORD '{{ pg_user_password }}';"
  become: yes
  become_user: "{{ pg_user }}"
  ignore_errors: yes

- name: master | Create database
  command: psql -c "CREATE DATABASE replica;"
  become: yes
  become_user: "{{ pg_user }}"
  ignore_errors: yes

#- name: master | Connect to database replica
#  command: psql -c "\c replica"
#  become: yes
#  become_user: "{{ pg_user }}"
#  ignore_errors: yes

- name: master | Create table cars
  command: psql -d replica -c "CREATE TABLE cars(id INT,name VARCHAR);"
  become: yes
  become_user: "{{ pg_user }}"
  ignore_errors: yes

- name: master | Add new line to table cars
  command: psql -d replica -c "INSERT INTO cars(id,name) VALUES(1,'Niva');"
  become: yes
  become_user: "{{ pg_user }}"
  ignore_errors: yes


